runtime bundle/pathogen/autoload/pathogen.vim
call pathogen#infect()

set nocompatible
set showcmd

" Always display the status line
set laststatus=2
" format string
"set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=\L%-5l\ \C%-4c%5p%%\ [%L\ \lines]
"set statusline=%1*\File:\ %*%f%1*%5m%*%=\L%-5l\ \C%-4c%5p%%\ [%L\ \lines]
" Show the current editing status
set showmode

syntax on

set autoindent
set smartindent

set expandtab
set tabstop=4
set shiftwidth=4

" scroll margin
set scrolloff=3
set sidescrolloff=5

" set paste

" Only do this part when compiled with support for autocommands
if has("autocmd")
  " Enable file type detection
  filetype on
  filetype plugin on

  " Customisations based on house-style (arbitrary)

  " Pandoc setings
  au BufNewFile,BufRead *.pdc set filetype=markdown
  autocmd FileType markdown setlocal ts=4 sts=4 sw=4 expandtab

  au BufNewFile,BufRead *.hsc set filetype=haskell

  autocmd FileType html setlocal ts=4 sts=4 sw=4 noexpandtab
  autocmd FileType javascript setlocal ts=4 sts=4 sw=4 noexpandtab
  autocmd FileType python setlocal ts=4 sts=4 sw=4 noexpandtab
  autocmd FileType sql setlocal ts=4 sts=4 sw=4 noexpandtab
  autocmd FileType haskell setlocal ts=2 sts=2 sw=2 expandtab
endif

" When vimrc is edited, reload it
autocmd! bufwritepost .vimrc source ~/.vimrc

let mapleader = " "
noremap ; :

" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>
	 
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:>\ ,eol:$

" Format XML
" (http://vim.wikia.com/wiki/Format_your_xml_document_using_xmllint)
" can select xml text to format and hit ,x or just format all text
nmap <leader>x :%!tidy -q -i -utf8 -xml<CR>
vmap <leader>x :!tidy -q -i -utf8 -xml<CR>

" Mapping for tabbing around
" Need to overwrite the nose compiler mapping
nmap <leader>th :tabfirst<CR>
nmap <leader>tj :tabnext<CR>
nmap <leader>tk :tabprev<CR>
nmap <leader>tl :tablast<CR>
nmap <leader>tq :tabclose<CR>
nmap <leader>te :tabnew<CR>

" line colours
hi LineNr ctermfg=darkgrey

" syntastic
let g:syntastic_python_checkers = ['pyflakes']

" number toggle
let g:NumberToggleTrigger=""
